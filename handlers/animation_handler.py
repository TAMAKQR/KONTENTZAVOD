"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω"""
import logging
import asyncio
import google.generativeai as genai
from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from config import GEMINI_API_KEY

logger = logging.getLogger(__name__)
router = Router()


async def enhance_animation_prompt(prompt: str) -> str:
    """–£–ª—É—á—à–∞–µ—Ç –ø—Ä–æ–º—Ç –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Google Gemini"""
    if not GEMINI_API_KEY:
        logger.warning("‚ö†Ô∏è GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç")
        return prompt
    
    try:
        genai.configure(api_key=GEMINI_API_KEY)
        
        system_prompt = """–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Å–æ–∑–¥–∞–Ω–∏—é –≤–∏–¥–µ–æ –ø—Ä–æ–º—Ç–æ–≤ –¥–ª—è AI –º–æ–¥–µ–ª–µ–π –≤–∏–¥–µ–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (Kling, Sora, Veo).
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ–±–∞–≤–∏–≤:
1. –ë–æ–ª—å—à–µ –¥–µ—Ç–∞–ª–µ–π –æ –¥–≤–∏–∂–µ–Ω–∏–∏ –∫–∞–º–µ—Ä—ã –∏ –¥–∏–Ω–∞–º–∏–∫–µ
2. –£—Ç–æ—á–Ω–µ–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –∏ —Å—Ç–∏–ª—è (–∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—è, –æ—Å–≤–µ—â–µ–Ω–∏–µ)
3. –î–µ—Ç–∞–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π/–æ–±—ä–µ–∫—Ç–æ–≤
4. –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã (–¥–µ–Ω—å/–Ω–æ—á—å, –ø–æ–≥–æ–¥–∞)
5. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã

–í–µ—Ä–Ω–∏ –¢–û–õ–¨–ö–û —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–º—Ç (–Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ), –±–µ–∑ –æ–±—ä—è—Å–Ω–µ–Ω–∏–π. –î–ª–∏–Ω–∞: 200-300 —Å–∏–º–≤–æ–ª–æ–≤."""
        
        model = genai.GenerativeModel("gemini-2.0-flash")
        response = await asyncio.to_thread(
            model.generate_content,
            f"{system_prompt}\n\n–£–ª—É—á—à–∏ —ç—Ç–æ—Ç –ø—Ä–æ–º—Ç –¥–ª—è –≤–∏–¥–µ–æ:\n{prompt}"
        )
        
        enhanced = response.text.strip()
        logger.info(f"‚úÖ –ü—Ä–æ–º—Ç —É–ª—É—á—à–µ–Ω Gemini:\n–û—Ä–∏–≥–∏–Ω–∞–ª: {prompt}\n–£–ª—É—á—à–µ–Ω–Ω—ã–π: {enhanced}")
        return enhanced
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ –ø—Ä–æ–º—Ç–∞ Gemini: {e}")
        logger.warning(f"‚ö†Ô∏è –í–æ–∑–≤—Ä–∞—â–∞—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç")
        return prompt


class AnimationStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω—ã - –û–î–ù–û –≤–∏–¥–µ–æ, –±–µ–∑ —Ä–∞–∑–±–∏–µ–Ω–∏—è –Ω–∞ —Å—Ü–µ–Ω—ã"""
    choosing_model = State()              # –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ AI
    choosing_aspect_ratio = State()       # –í—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω
    choosing_duration = State()           # –í—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    choosing_image_option = State()       # –ó–∞–≥—Ä—É–∂–∞—Ç—å –ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ?
    waiting_for_image = State()           # –ï—Å–ª–∏ –¥–∞ - –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    waiting_for_prompt = State()          # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç
    waiting_for_negative_prompt = State() # –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    choosing_enhance_option = State()     # –£–ª—É—á—à–∞—Ç—å –ª–∏ —Å –ò–ò?
    generating = State()                  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ


@router.callback_query(lambda c: c.data == "animation")
async def start_animation(callback: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è –∫–∞—Ä—Ç–∏–Ω—ã - –≤—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ AI"""
    await callback.answer()
    await state.set_state(AnimationStates.choosing_model)
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üé¨ Kling v2.5 Turbo Pro", callback_data="anim_model_kling")],
            [InlineKeyboardButton(text="üéûÔ∏è Sora 2", callback_data="anim_model_sora")],
            [InlineKeyboardButton(text="üé• Veo 3.1 Fast", callback_data="anim_model_veo")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await callback.message.answer(
        "üé® –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã\n"
        "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        "–í—ã–±–µ—Ä–∏ AI –º–æ–¥–µ–ª—å –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è:",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data.startswith("anim_model_"))
async def choose_animation_model(callback: types.CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è"""
    await callback.answer()
    
    model_map = {
        "anim_model_kling": ("kwaivgi/kling-v2.5-turbo-pro", "üé¨ Kling v2.5 Turbo Pro"),
        "anim_model_sora": ("openai/sora-2", "üéûÔ∏è Sora 2"),
        "anim_model_veo": ("google/veo-3.1-fast", "üé• Veo 3.1 Fast")
    }
    
    model, model_name = model_map.get(callback.data, ("", ""))
    await state.update_data(model=model, model_name=model_name)
    await state.set_state(AnimationStates.choosing_aspect_ratio)
    
    # –í—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="16:9 (–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ)", callback_data="anim_aspect_169")],
            [InlineKeyboardButton(text="9:16 (–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ)", callback_data="anim_aspect_916")],
            [InlineKeyboardButton(text="1:1 (–ö–≤–∞–¥—Ä–∞—Ç)", callback_data="anim_aspect_11")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await callback.message.answer(
        f"‚úÖ –ú–æ–¥–µ–ª—å –≤—ã–±—Ä–∞–Ω–∞: {model_name}\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        f"üìê –í—ã–±–µ—Ä–∏ —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω –¥–ª—è –≤–∏–¥–µ–æ:",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data.startswith("anim_aspect_"))
async def choose_aspect_ratio(callback: types.CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω"""
    await callback.answer()
    
    aspect_map = {
        "anim_aspect_169": ("16:9", "16:9 (–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ)"),
        "anim_aspect_916": ("9:16", "9:16 (–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ)"),
        "anim_aspect_11": ("1:1", "1:1 (–ö–≤–∞–¥—Ä–∞—Ç)")
    }
    
    aspect, aspect_name = aspect_map.get(callback.data, ("16:9", ""))
    await state.update_data(aspect_ratio=aspect)
    await state.set_state(AnimationStates.choosing_duration)
    
    # –í—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚è±Ô∏è 5 —Å–µ–∫—É–Ω–¥", callback_data="anim_duration_5")],
            [InlineKeyboardButton(text="‚è±Ô∏è 10 —Å–µ–∫—É–Ω–¥", callback_data="anim_duration_10")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await callback.message.answer(
        f"‚úÖ –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω: {aspect_name}\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        f"‚è±Ô∏è –í—ã–±–µ—Ä–∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤–∏–¥–µ–æ:",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data.startswith("anim_duration_"))
async def choose_duration(callback: types.CallbackQuery, state: FSMContext):
    """–í—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""
    await callback.answer()
    
    duration_map = {
        "anim_duration_5": 5,
        "anim_duration_10": 10
    }
    
    duration = duration_map.get(callback.data, 5)
    await state.update_data(duration=duration)
    await state.set_state(AnimationStates.choosing_image_option)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω—É–∂–Ω–∞ –ª–∏ –∏—Å—Ö–æ–¥–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∞
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω—É", callback_data="anim_image_yes")],
            [InlineKeyboardButton(text="‚ùå –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑ –∫–∞—Ä—Ç–∏–Ω—ã", callback_data="anim_image_no")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await callback.message.answer(
        f"‚úÖ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        f"üñºÔ∏è –•–æ—á–µ—à—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏—è?\n"
        f"(–ú–æ–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∏ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–º—Ç–∞)",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data == "anim_image_yes")
async def choose_image_yes(callback: types.CallbackQuery, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"""
    await callback.answer()
    await state.set_state(AnimationStates.waiting_for_image)
    
    await callback.message.answer(
        "üì§ –û—Ç–ø—Ä–∞–≤—å –∫–∞—Ä—Ç–∏–Ω—É, –∫–æ—Ç–æ—Ä—É—é —Ç—ã —Ö–æ—á–µ—à—å –∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å:\n"
        "(PNG, JPG –∏–ª–∏ –¥—Ä—É–≥–æ–π —Ñ–æ—Ä–º–∞—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è)"
    )


@router.callback_query(lambda c: c.data == "anim_image_no")
async def choose_image_no(callback: types.CallbackQuery, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    await callback.answer()
    await state.update_data(image_id=None)
    await state.set_state(AnimationStates.waiting_for_prompt)
    
    await callback.message.answer(
        "‚úÖ OK, –±—É–¥–µ–º –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ —Ç–æ–ª—å–∫–æ –∏–∑ –ø—Ä–æ–º—Ç–∞\n"
        "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        "üìù –ù–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∏–¥–µ–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã —Ö–æ—á–µ—à—å —Å–æ–∑–¥–∞—Ç—å:\n\n"
        "–ü—Ä–∏–º–µ—Ä: '–ö—Ä–∞—Å–∏–≤—ã–π –ø–µ–π–∑–∞–∂ –≥–æ—Ä–Ω—ã—Ö –≤–µ—Ä—à–∏–Ω —Å –æ–±–ª–∞–∫–∞–º–∏'"
    )


@router.message(AnimationStates.waiting_for_image)
async def process_animation_image(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    if message.photo:
        # –ü–æ–ª—É—á–∞–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        file_id = message.photo[-1].file_id
        await state.update_data(image_id=file_id)
        logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏: {file_id}")
        
        await state.set_state(AnimationStates.waiting_for_prompt)
        await message.answer(
            "‚úÖ –ö–∞—Ä—Ç–∏–Ω–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n"
            "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
            "üìù –¢–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏:\n\n"
            "–ü—Ä–∏–º–µ—Ä: '–≤–æ–ª–Ω—É—é—â–µ–µ—Å—è –º–æ—Ä–µ —Å –∑–∞–∫–∞—Ç–æ–º', '–ª–µ—Ç—è—â–∏–µ –ø—Ç–∏—Ü—ã'"
        )
    else:
        await message.answer("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Ñ–æ—Ç–æ")


@router.message(AnimationStates.waiting_for_prompt)
async def process_animation_prompt(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–º—Ç–∞"""
    prompt = message.text
    await state.update_data(prompt=prompt)
    await state.set_state(AnimationStates.waiting_for_negative_prompt)
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –î–æ–±–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç", callback_data="anim_neg_yes")],
            [InlineKeyboardButton(text="‚ùå –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data="anim_neg_no")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await message.answer(
        f"‚úÖ –ü—Ä–æ–º—Ç –ø–æ–ª—É—á–µ–Ω: '{prompt[:60]}...'\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        f"‚ùå –•–æ—á–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç?\n"
        f"(–ß—Ç–æ –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –≤–∏–¥–µ–æ)",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data == "anim_neg_yes")
async def add_negative_prompt(callback: types.CallbackQuery, state: FSMContext):
    """–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç"""
    await callback.answer()
    await state.set_state(AnimationStates.waiting_for_negative_prompt)
    
    await callback.message.answer(
        "‚ùå –ù–∞–ø–∏—à–∏ —á—Ç–æ –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –≤–∏–¥–µ–æ:\n\n"
        "–ü—Ä–∏–º–µ—Ä: '—Ä–∞–∑–º—ã—Ç–æ–µ, –Ω–∏–∑–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã'"
    )


@router.callback_query(lambda c: c.data == "anim_neg_no")
async def skip_negative_prompt(callback: types.CallbackQuery, state: FSMContext):
    """–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç"""
    await callback.answer()
    await state.update_data(negative_prompt="")
    await state.set_state(AnimationStates.choosing_enhance_option)
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ú® –£–ª—É—á—à–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –ò–ò", callback_data="anim_enhance_yes")],
            [InlineKeyboardButton(text="‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –µ—Å—Ç—å", callback_data="anim_enhance_no")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await callback.message.answer(
        "‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç –ø—Ä–æ–ø—É—â–µ–Ω\n"
        "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        "‚ú® –•–æ—á–µ—à—å —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º—Ç —Å –ø–æ–º–æ—â—å—é –ò–ò?\n"
        "(–ò–ò –¥–æ–±–∞–≤–∏—Ç –¥–µ—Ç–∞–ª–∏ –∏ —É–ª—É—á—à–∏—Ç –∫–∞—á–µ—Å—Ç–≤–æ –æ–ø–∏—Å–∞–Ω–∏—è)",
        reply_markup=keyboard
    )


@router.message(AnimationStates.waiting_for_negative_prompt)
async def process_negative_prompt(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ–º—Ç–∞"""
    negative_prompt = message.text
    await state.update_data(negative_prompt=negative_prompt)
    await state.set_state(AnimationStates.choosing_enhance_option)
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="‚ú® –£–ª—É—á—à–∏—Ç—å —Å –ø–æ–º–æ—â—å—é –ò–ò", callback_data="anim_enhance_yes")],
            [InlineKeyboardButton(text="‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ –µ—Å—Ç—å", callback_data="anim_enhance_no")],
            [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
        ]
    )
    
    await message.answer(
        f"‚úÖ –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç: '{negative_prompt[:50]}...'\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        f"‚ú® –•–æ—á–µ—à—å —É–ª—É—á—à–∏—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ–º—Ç —Å –ø–æ–º–æ—â—å—é –ò–ò?",
        reply_markup=keyboard
    )


@router.callback_query(lambda c: c.data == "anim_enhance_yes")
async def enhance_prompt_yes(callback: types.CallbackQuery, state: FSMContext):
    """–£–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ –ò–ò"""
    await callback.answer()
    await state.set_state(AnimationStates.generating)
    
    data = await state.get_data()
    original_prompt = data.get("prompt", "")
    
    msg = await callback.message.answer(
        f"‚ú® –£–ª—É—á—à–∞—é –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ –ò–ò...\n"
        f"‚è≥ –≠—Ç–æ –∑–∞–π–º–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥..."
    )
    
    # –£–ª—É—á—à–∞–µ–º –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ Google Gemini
    enhanced_prompt = await enhance_animation_prompt(original_prompt)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É–ª—É—á—à–µ–Ω–∏—è
    if enhanced_prompt != original_prompt:
        await callback.message.answer(
            f"‚úÖ –ü—Ä–æ–º—Ç —É–ª—É—á—à–µ–Ω!\n\n"
            f"üìù <b>–û—Ä–∏–≥–∏–Ω–∞–ª:</b>\n{original_prompt}\n\n"
            f"‚ú® <b>–£–ª—É—á—à–µ–Ω–Ω—ã–π:</b>\n{enhanced_prompt}",
            parse_mode="HTML"
        )
    else:
        await callback.message.answer(
            f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–ª—É—á—à–∏—Ç—å –ø—Ä–æ–º—Ç —á–µ—Ä–µ–∑ –ò–ò, –∏—Å–ø–æ–ª—å–∑—É—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π"
        )
    
    await state.update_data(prompt=enhanced_prompt)
    await start_generation(callback, state)


@router.callback_query(lambda c: c.data == "anim_enhance_no")
async def enhance_prompt_no(callback: types.CallbackQuery, state: FSMContext):
    """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º—Ç –∫–∞–∫ –µ—Å—Ç—å"""
    await callback.answer()
    await state.set_state(AnimationStates.generating)
    await start_generation(callback, state)


async def start_generation(callback: types.CallbackQuery, state: FSMContext):
    """–ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ"""
    data = await state.get_data()
    
    model = data.get("model", "google/veo-3.1-fast")
    model_name = data.get("model_name", "Unknown")
    aspect_ratio = data.get("aspect_ratio", "16:9")
    duration = data.get("duration", 5)
    prompt = data.get("prompt", "")
    negative_prompt = data.get("negative_prompt", "")
    image_id = data.get("image_id")
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    summary = (
        f"üé¨ –ü–ê–†–ê–ú–ï–¢–†–´ –í–ò–î–ï–û\n"
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
        f"üé® –ú–æ–¥–µ–ª—å: {model_name}\n"
        f"üìê –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω: {aspect_ratio}\n"
        f"‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} —Å–µ–∫\n"
        f"üìù –ü—Ä–æ–º—Ç: {prompt[:70]}{'...' if len(prompt) > 70 else ''}\n"
    )
    
    if negative_prompt:
        summary += f"‚ùå –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ–º—Ç: {negative_prompt[:50]}{'...' if len(negative_prompt) > 50 else ''}\n"
    
    if image_id:
        summary += f"üñºÔ∏è –ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ\n"
    
    summary += (
        f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n"
        f"‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≤–∏–¥–µ–æ...\n"
        f"‚è∞ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å 2-5 –º–∏–Ω—É—Ç"
    )
    
    await callback.message.answer(summary)
    logger.info(f"üé¨ –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: {model}")
    logger.info(f"   üìù –ü—Ä–æ–º—Ç: {prompt[:100]}")
    logger.info(f"   ‚ùå –û—Ç—Ä. –ø—Ä–æ–º—Ç: {negative_prompt[:100] if negative_prompt else 'N/A'}")
    
    # TODO: –î–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Replicate API
    
    await callback.message.answer(
        "‚úÖ –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!\n\n"
        "üéâ –¢–≤–æ—è –∞–Ω–∏–º–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞"
    )
    
    await state.clear()