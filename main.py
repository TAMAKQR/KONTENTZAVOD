"""–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª Telegram –±–æ—Ç–∞"""
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.context import FSMContext

from config import BOT_TOKEN
from handlers import video_handler, animation_handler, photo_handler, photo_ai_handler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
storage = MemoryStorage()
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(storage=storage)

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ö—ç–Ω–¥–ª–µ—Ä—ã –∏–∑ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
dp.include_router(video_handler.router)
dp.include_router(animation_handler.router)
dp.include_router(photo_handler.router)
dp.include_router(photo_ai_handler.router)


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìπ –¢–µ–∫—Å—Ç ‚Üí –í–∏–¥–µ–æ", callback_data="video")],
            [InlineKeyboardButton(text="üì∏ –¢–µ–∫—Å—Ç ‚Üí –§–æ—Ç–æ", callback_data="photo_ai")],
            [InlineKeyboardButton(text="üé® –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã", callback_data="animation")],
            [InlineKeyboardButton(text="üñºÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ", callback_data="photo")],
        ]
    )
    
    await message.answer(
        "üëã –ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=keyboard
    )


@dp.callback_query(lambda c: c.data == "back_to_menu")
async def back_to_menu(callback: types.CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.answer()
    await state.clear()
    
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üìπ –¢–µ–∫—Å—Ç ‚Üí –í–∏–¥–µ–æ", callback_data="video")],
            [InlineKeyboardButton(text="üì∏ –¢–µ–∫—Å—Ç ‚Üí –§–æ—Ç–æ", callback_data="photo_ai")],
            [InlineKeyboardButton(text="üé® –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã", callback_data="animation")],
            [InlineKeyboardButton(text="üñºÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ", callback_data="photo")],
        ]
    )
    
    await callback.message.answer(
        "üëã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ç—ã —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:",
        reply_markup=keyboard
    )


@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
**üìπ –¢–µ–∫—Å—Ç ‚Üí –í–∏–¥–µ–æ** - –ì–µ–Ω–µ—Ä–∏—Ä—É–π –≤–∏–¥–µ–æ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (—Ä–∞–∑–±–∏–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ü–µ–Ω—ã)
**üì∏ –¢–µ–∫—Å—Ç ‚Üí –§–æ—Ç–æ** - –ì–µ–Ω–µ—Ä–∏—Ä—É–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏–∑ —Ç–µ–∫—Å—Ç–∞ (—Å –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º –æ—Ç –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö)
**üé® –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω—ã** - –û–∂–∏–≤–∏ –∫–∞—Ä—Ç–∏–Ω—É —Å –ø–æ–º–æ—â—å—é AI (–æ–¥–Ω–æ –≤–∏–¥–µ–æ)
**üñºÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ** - –ë–∞–∑–æ–≤–æ–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ

–ò—Å–ø–æ–ª—å–∑—É–π /start –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    await message.answer(help_text)


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())