"""
–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Airtable –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent.parent.parent))

from integrations.airtable.airtable_logger import session_logger
from integrations.airtable.airtable_video_integration import log_video_start, log_video_complete
from integrations.airtable.airtable_animation_integration import log_animation_start, log_animation_complete
from integrations.airtable.airtable_photo_integration import log_photo_start, log_photo_complete
from integrations.airtable.airtable_photo_ai_integration import log_photo_ai_start, log_photo_ai_complete

async def example_video_logging():
    """–ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ"""
    print("üé• –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ...")
    
    # –ù–∞—á–∞–ª–æ —Å–µ—Å—Å–∏–∏
    user_id = 123456
    session_id = "vid_001"
    
    success = await log_video_start(
        user_id=user_id,
        session_id=session_id,
        model="Kling",
        aspect_ratio="16:9",
        duration=5,
        prompt="–ö—Ä–∞—Å–∏–≤–æ–µ –Ω–µ–±–æ —Å –æ–±–ª–∞–∫–∞–º–∏ –Ω–∞ –∑–∞–∫–∞—Ç–µ"
    )
    
    if success:
        print(f"‚úÖ –°–µ—Å—Å–∏—è {session_id} –Ω–∞—á–∞—Ç–∞")
    
    # –ò–º–∏—Ç–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã
    await asyncio.sleep(2)
    
    # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    success = await log_video_complete(
        session_id=session_id,
        status="Completed",
        output_url="https://example.com/video.mp4",
        processing_time=45.5
    )
    
    if success:
        print(f"‚úÖ –°–µ—Å—Å–∏—è {session_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

async def example_animation_logging():
    """–ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏"""
    print("\nüé® –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏...")
    
    user_id = 123456
    session_id = "anim_001"
    
    success = await log_animation_start(
        user_id=user_id,
        session_id=session_id,
        model="replicate",
        prompt="–û–∂–∏–≤–∏ —ç—Ç—É –∫–∞—Ä—Ç–∏–Ω—É"
    )
    
    if success:
        print(f"‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è {session_id} –Ω–∞—á–∞—Ç–∞")
    
    await asyncio.sleep(2)
    
    success = await log_animation_complete(
        session_id=session_id,
        status="Completed",
        output_url="https://example.com/animation.mp4",
        processing_time=30.0
    )
    
    if success:
        print(f"‚úÖ –ê–Ω–∏–º–∞—Ü–∏—è {session_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

async def example_photo_logging():
    """–ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ"""
    print("\nüñºÔ∏è –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ç–æ...")
    
    user_id = 123456
    session_id = "photo_001"
    
    success = await log_photo_start(
        user_id=user_id,
        session_id=session_id,
        prompt="–†–∞–∑–º—ã—Ç–∏–µ —Ñ–æ–Ω–∞"
    )
    
    if success:
        print(f"‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ {session_id} –Ω–∞—á–∞—Ç–æ")
    
    await asyncio.sleep(2)
    
    success = await log_photo_complete(
        session_id=session_id,
        status="Completed",
        output_url="https://example.com/photo.jpg",
        processing_time=15.0
    )
    
    if success:
        print(f"‚úÖ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ç–æ {session_id} –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

async def example_photo_ai_logging():
    """–ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è AI —Ñ–æ—Ç–æ"""
    print("\n‚ú® –ü—Ä–∏–º–µ—Ä –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è AI —Ñ–æ—Ç–æ...")
    
    user_id = 123456
    session_id = "ai_photo_001"
    
    success = await log_photo_ai_start(
        user_id=user_id,
        session_id=session_id,
        model="gemini",
        prompt="–°–¥–µ–ª–∞–π —Ñ–æ—Ç–æ –±–æ–ª–µ–µ —è—Ä–∫–∏–º"
    )
    
    if success:
        print(f"‚úÖ AI –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ {session_id} –Ω–∞—á–∞—Ç–∞")
    
    await asyncio.sleep(2)
    
    success = await log_photo_ai_complete(
        session_id=session_id,
        status="Completed",
        output_url="https://example.com/ai_photo.jpg",
        processing_time=20.0
    )
    
    if success:
        print(f"‚úÖ AI –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ {session_id} –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

async def main():
    """–ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("=" * 50)
    print("–ü—Ä–∏–º–µ—Ä—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è Airtable")
    print("=" * 50)
    
    await example_video_logging()
    await example_animation_logging()
    await example_photo_logging()
    await example_photo_ai_logging()
    
    print("\n‚ú® –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")

if __name__ == "__main__":
    asyncio.run(main())
